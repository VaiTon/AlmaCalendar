{{ template "base" . }}
{{ define "title" }}Corso | {{.course.Description}}{{ end }}

{{ define "body" }}

    {{$course := .Course}}
    {{$curricula := .Curricula}}
    {{$teachings := .Teachings}}

    <p class="text-xl">{{.Course.Tipologia}} in</p>
    <h1 class="text-4xl font-bold mb-8">{{.Course.Descrizione}}</h1>


    <a class="link link-info" href="{{.Course.Url}}"> Link al sito del corso </a>

    {{range $anno := anniRange .Course.DurataAnni}}
        {{$yCurricula := index $curricula $anno}}
        {{$yTeachings := index $teachings $anno}}
        <div class="mt-8">
            {{range $curriculum := $yCurricula }}
            {{ $ycTeachings := index $yTeachings $curriculum }}
                <div class="mt-4">
                    <h2 class="text-3xl ">
                        Calendario {{$anno}} anno {{if gt (len $yCurricula) 1}}({{$curriculum.Label}}){{end}}
                    </h2>
                    <div class="mt-2 cal flex gap-4">
                        <!-- Filter -->
                        {{ if gt (len $ycTeachings) 1 }}
                        <div class="dropdown dropdown-bottom">
                          <div tabindex="0" role="button" class="btn m-1"> Filter </div>
                          <ul tabindex="0" class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
                          {{ range $teaching := $ycTeachings }}
                            <li class="bg-base-100">
                              <div class="form-control">
                                <label class="label cursor-pointer">
                <input id="checkbox" type="checkbox" class="checkbox checkbox-sm mr-5" anno="{{ $anno }}"
                curriculum={{ $curriculum.Value }}
                option={{ $teaching.Code }}
              />
                                  <span class="label-text ">{{ $teaching.Name }}</span>
                                </label>
                              </div>      
                            </li>
                          {{ end }}
                          </ul>
                        </div>
                        {{ end }}
                        <!-- End filter -->
                        <pre class="input input-bordered font-mono h-auto w-auto py-2 leading-loose {{ $anno }}_{{ $curriculum.Value }}" 
                             id="{{ $anno }}_{{ $curriculum.Value }}"
                             title="Link del calendario in formato WebCal"
                             tabindex="0">/cal/{{$course.Codice}}/{{$anno}}{{if gt (len $yCurricula) 1}}?curr={{$curriculum.Value}}{{end}}</pre>
                        <!-- Buttons -->
                        <div>
                            <button class="btn btn-accent join-item" title="Copia">
                                <span>COPY</span>
                                <span class="icon-[heroicons--document-duplicate-solid] text-xl"></span>
                            </button>
                            <a class="btn btn-accent join-item open {{ $anno }}_{{ $curriculum.Value }}">Apri online</a>
                        </div>
                        <div class="join">
                            <a class="btn btn-info bg-white join-item google {{ $anno }}_{{ $curriculum.Value }}">
                                Google Calendar <span class="icon-[logos--google-calendar] text-xl"></span>
                            </a>
                            <a class="btn btn-info bg-white join-item apple {{ $anno }}_{{ $curriculum.Value }}">
                                Apple Calendar <span class="icon-[logos--apple] text-xl"></span>
                            </a>
                        </div>
                        <!-- End buttons -->
                    </div>
                </div>
            {{end}}
        </div>
    {{end}}

    <script>
        const elements = document.getElementsByClassName("cal");
        const url = new URL(document.baseURI);

        const openPrefix = "https://simonrob.github.io/online-ics-feed-viewer/#";
        const googlePrefix = "https://www.google.com/calendar/render?cid=";
        const applePrefix = "";

        for (const el of elements) {
            const pre = el.getElementsByTagName("pre")[0]
            const calPath = pre.textContent;


            const webcalLink = `webcal://${url.host}${calPath}`

            pre.textContent = webcalLink;
            // Select all text on click
            pre.addEventListener("click", () => {
                const range = document.createRange();
                range.selectNodeContents(pre);
                const sel = window.getSelection();
                sel.removeAllRanges();
                sel.addRange(range); });

            const btnCopyUrl = el.getElementsByTagName("button")[0]
            btnCopyUrl.addEventListener("click", () => {
                navigator.clipboard.writeText(pre.textContent);
            });


            const aOpen = el.getElementsByClassName("open")[0]
            aOpen.href = openPrefix + new URLSearchParams({
                feed: `${url.origin}${calPath}`,
                cors: false,
                title: "Lezioni",
                hideinput: true
            })

            const addToGoogleBtn = el.getElementsByClassName("google")[0]
            addToGoogleBtn.href = googlePrefix + encodeURIComponent(webcalLink)

            const addToAppleBtn = el.getElementsByClassName("apple")[0]
            addToAppleBtn.href = webcalLink
        }

        // Utility functions to work with URL params;
        // Given an url string it returns the subject added
        function addSubject(url, subject) {
          if (url.includes("subjects")) {
            url = url.replace(",,", ",")
            url = url.replace("=,", "=")
            
            let last_char = url.slice(-1)
            if (last_char != "," && last_char != "=") {
              url = url + ","
            }
            return url + subject
          } else {
            if (url.includes("?")) {
              return url + "&subjects=" + subject
            } else {
              return url + "?subjects=" + subject
            }
          }
        }

        // Given an url string it returns the subject removed from the string
        function removeSubject(url, subject) {
          url = url.replace(subject, "")
          url = url.replace(",,", ",")
          url = url.replace("=,", "=")
          return url
        }

        const checkboxes = document.getElementsByClassName("checkbox")
        for (const ck of checkboxes) {
          ck.checked = false

          let a = ck.getAttribute("anno")
          let c = ck.getAttribute("curriculum")
          let o = ck.getAttribute("option")

          if (!c) {
            c = ""
          } 

          ck.addEventListener("click", (event) => {
            let class_name = `${a}_${c}`

            els = document.getElementsByClassName(class_name)
            // We need to get a cleare string of the calendar URL.
            plain_string = document.getElementById(class_name).textContent

            for (const el of els) {
              let res

              if (ck.checked) {
                console.log(`Adding ${o} to: ${class_name}`);
                res = addSubject(plain_string, o);
              } else {
                console.log(`Removing ${o} to: ${class_name}`)
                res = removeSubject(plain_string, o)
              }

              // Check if element is tye <a href="..."/>
              if (el.nodeName != "A") {
                el.textContent = res
              } else {

                if (el.classList.contains("open")) {
                  el.href = res
                } else if (el.classList.contains("google")) {
                  el.href = googlePrefix + encodeURIComponent(res)
                } else if (el.classList.contains("apple")) {
                  el.href = res
                }
              }
            }
          })
        }

    </script>
{{ end }}


