{{ template "base" . }}
{{ define "title" }}Corsi{{ end }}

{{ define "body" }}
<div class="flex flex-col items-center min-h-screen w-full py-8 px-2 sm:px-4">
  <div class="container bg-base-100 dark:bg-neutral rounded-2xl p-4 sm:p-8">
    <div class="flex items-center gap-3 mb-8">
      <span class="icon-[mdi--calendar-month-outline] text-unibo dark:text-[var(--color-unibo-light)] text-3xl sm:text-4xl"></span>
      <h1 class="text-2xl sm:text-3xl md:text-4xl font-extrabold tracking-tight text-neutral-900 dark:text-white">AlmaCalendar</h1>
    </div>
    <div class="flex flex-col md:flex-row md:items-center gap-2 mb-6 w-full">
      <label for="filter" class="mr-2 shrink-0 sm:text-lg font-medium flex items-center gap-2 whitespace-nowrap">
          <span class="icon-[mdi--filter-variant] text-lg sm:text-xl text-unibo dark:text-[var(--color-unibo-light)]"></span>
          Filtra i corsi:
      </label>
      <input
        type="text"
        id="filter"
        class="input w-full"
        placeholder="Inserisci filtro"
        value="{{ .filter }}"
      >
    </div>
    <div class="overflow-x-auto w-full">
      <table class="table min-w-full rounded-box border border-base-content/5 bg-base-100">
        <thead>
          <tr class="bg-base-200 dark:bg-neutral text-neutral-700 dark:text-neutral-200">
            <th class="py-2 sm:py-3 px-2 sm:px-4 text-left font-semibold">A.A.</th>
            <th class="py-2 sm:py-3 px-2 sm:px-4 text-left font-semibold">Descrizione</th>
            <th class="py-2 sm:py-3 px-2 sm:px-4 text-left font-semibold">Campus</th>
          </tr>
        </thead>
        <tbody>
        {{ range .courses }}
          {{ $course := .}}
          <tr class="hover:bg-[var(--color-unibo-light)]/40 dark:hover:bg-[var(--color-unibo-light)]/20 transition-colors even:bg-base-200 dark:even:bg-neutral">
            <td class="py-1 sm:py-2 px-2 sm:px-4 font-mono text-neutral-800 dark:text-neutral-200">{{.AnnoAccademico}}</td>
            <td class="py-1 sm:py-2 px-2 sm:px-4">
              <a class="text-unibo dark:text-[var(--color-unibo-light)] font-medium hover:underline flex items-center gap-1" href="/courses/{{$course.Codice}}" data-course="{{.Tipologia}} in {{ printf "%.100s" .Descrizione }}">
                <span class="icon-[mdi--book-education-outline] text-unibo/70 dark:text-[var(--color-unibo-light)]/70"></span>
                {{ $tipo := "" }}
                {{ if eq .Tipologia "Laurea" }}
                  {{ $tipo = "LT" }}
                {{ else if eq .Tipologia "Laurea Magistrale" }}
                  {{ $tipo = "LM" }}
                {{ else if eq .Tipologia "Laurea Magistrale a ciclo unico" }}
                  {{ $tipo = "LMCU" }}
                {{ else }}
                  {{ $tipo = .Tipologia }}
                {{ end }}
                <span class="truncate block max-w-[180px] sm:max-w-none">{{$tipo}} in {{ printf "%.100s" .Descrizione }}</span>
              </a>
            </td>
            <td class="py-1 sm:py-2 px-2 sm:px-4 text-neutral-700 dark:text-neutral-300">{{.Campus}}</td>
          </tr>
        {{ end }}
        </tbody>
      </table>
    </div>
    <style id="cssFilter"></style>
  </div>
</div>
<script>
    const filter = document.getElementById("filter");
    const cssFilter = document.getElementById("cssFilter");

    // Given the filter to apply, updates the css of #cssFilter to hide the necessary rows of the table
    function filterCourses(filterValue) {
        // Add an attribute selector of the form [data-course*="word" i] for every (non-empty) word in filter
        let filters = filterValue.trim().split(/\s+/).filter((s) => s).reduce(
            (acc, f) => acc + '[data-course*="' + f + '" i]',
            ""
        );

        if (filters) {
            // For example, the generated css for "laurea informatica" is:
            // tr:has(a:not([data-course*="laurea" i][data-course*="informatica" i])) {
            //     display: none;
            // }
            cssFilter.innerHTML = "tr:has(a:not(" + filters + ")){display: none;}";
        } else {
            cssFilter.innerHTML = "";
        }
    }

    if (filter.value) { // Don't run when the filter is empty
        filterCourses(filter.value);
    }
    filter.addEventListener("input", (event) => filterCourses(filter.value));
</script>
{{ end }}
